// This is the grammar use for the first parsing only.
// The start rule of the first parsing is input_string.
// As the start rule input_string will not
// appear in the grammar use for second parse; therefore,
// it is save to put them here.
// For the second parse, the new parser will use another rule
// as start rule as stated below.
//
// Backquote
input_string : (single_quote_in_first_parse | other | backquote)*
single_quote_in_first_parse : SINGLE_QUOTE_CONTENT_FIRST_PARSE
other   : OTHER_CONTENT
backquote   : "`" _WHITESPACE* command _WHITESPACE* "`"
            | "`" _WHITESPACE* "`" -> empty_backquote


// Terminal
// This terminal is intened to place here to group it with the rules
// for the first parsing
SINGLE_QUOTE_CONTENT_FIRST_PARSE : /\'/ /[^(\')]/* /\'/ 
OTHER_CONTENT : /[^(\`)(\')]+/

// This is the grammar use for the second parsing only.
// The start rule of the first parsing is command
//
// Command Line
command : pipe | seq | call
pipe    : call _WHITESPACE* "|" _WHITESPACE* call 
        | call _WHITESPACE* "|" _WHITESPACE* pipe
seq     : command _WHITESPACE* ";" _WHITESPACE* command
        | command _WHITESPACE* ";" _WHITESPACE* seq


// Quoting
// Since there should NOT exist nested backquote
// and backquote has been replaced by string at the first parsing.
// This part only deal with single quote and double quote 
?quoted : single_quote | double_quote
single_quote : "'" single_quote_content* "'"
?single_quote_content  : SINGLE_QUOTE_CONTENT
double_quote : "\"" double_quote_content* "\""
?double_quote_content   : DOUBLE_QUOTE_CONTENT


// Call
call : _WHITESPACE? (redirection _WHITESPACE)* application_call (_WHITESPACE redirection)* _WHITESPACE?
application_call : (application_name) (_WHITESPACE arguments)?
?application_name : application | unsafe_application
arguments   : individual_argument (_WHITESPACE+ individual_argument)*
?individual_argument    : quoted | unquoted | quote_no_space
quote_no_space  : (quoted | unquoted)+
redirection : "<" _WHITESPACE? unquoted -> input_redirection
            | ">" _WHITESPACE? unquoted -> output_redirection
unquoted    : UNQUOTEDCONTENT
application     : APPLICATION_NAME
unsafe_application : "_" application


// Terminals
UNQUOTEDCONTENT : /[^(\n)(" ")(\t)(\;)(\|)(<)(>)(')(`)(\")]+/
SINGLE_QUOTE_CONTENT : /[^(\n)(\')]+/
DOUBLE_QUOTE_CONTENT : /[^(\n)(\`)(\")]+/

%import common.NEWLINE
%import common.WS_INLINE -> _WHITESPACE
%import common.WORD -> APPLICATION_NAME